# Generated by https://quicktype.io

from typing import Optional, List
from enum import Enum
from uuid import UUID
from datetime import datetime


class Links:
    first: str
    last: str
    prev: None
    next: str

    def __init__(self, first: str, last: str, prev: None, next: str) -> None:
        self.first = first
        self.last = last
        self.prev = prev
        self.next = next


class Link:
    url: Optional[str]
    label: str
    active: bool

    def __init__(self, url: Optional[str], label: str, active: bool) -> None:
        self.url = url
        self.label = label
        self.active = active


class Meta:
    current_page: int
    meta_from: int
    last_page: int
    links: List[Link]
    path: str
    per_page: int
    to: int
    total: int

    def __init__(self, current_page: int, meta_from: int, last_page: int, links: List[Link], path: str, per_page: int, to: int, total: int) -> None:
        self.current_page = current_page
        self.meta_from = meta_from
        self.last_page = last_page
        self.links = links
        self.path = path
        self.per_page = per_page
        self.to = to
        self.total = total


class Buyer:
    id: int
    name: str

    def __init__(self, id: int, name: str) -> None:
        self.id = id
        self.name = name


class CreatedBy(Enum):
    BUYER = "Buyer"
    SELLER = "Seller"


class OrderStatusName(Enum):
    ORDER_SUBMITTED = "Order Submitted"


class OrderStatus:
    id: int
    name: OrderStatusName
    payment_percentage: int
    position: int

    def __init__(self, id: int, name: OrderStatusName, payment_percentage: int, position: int) -> None:
        self.id = id
        self.name = name
        self.payment_percentage = payment_percentage
        self.position = position


class PaymentStatus(Enum):
    UNPAID = "unpaid"


class Email(Enum):
    MBUCKNER_AYRLOOM_COM = "mbuckner@ayrloom.com"


class SalesRepName(Enum):
    MAX_BUCKNER = "Max Buckner"


class SalesRep:
    name: SalesRepName
    phone: str
    email: Email

    def __init__(self, name: SalesRepName, phone: str, email: Email) -> None:
        self.name = name
        self.phone = phone
        self.email = email


class ShipCountry(Enum):
    US = "US"


class ShipFromCity(Enum):
    LAFAYETTE = "Lafayette"


class ShipFromLineOne(Enum):
    THE_4473_CHERRY_VALLEY_TPK = "4473 Cherry Valley Tpk"


class ShipFromLineTwo(Enum):
    BUILDING_2 = "Building #2"


class ShipFromName(Enum):
    GEN_V_LABS = "GEN V Labs"


class ShipState(Enum):
    NEW_YORK = "New York"


class Term:
    name: str

    def __init__(self, name: str) -> None:
        self.name = name


class Order:
    id: int
    uuid: UUID
    invoice_number: str
    subtotal: str
    total: str
    excise_tax: str
    excise_tax_percentage: None
    additional_discount: str
    delivery_cost: str
    cultivation_tax: str
    cultivation_tax_percentage: None
    seller_archived: bool
    order_date: datetime
    created_by: CreatedBy
    operation_id: int
    order_status_id: int
    cancelled: bool
    deal_flow_id: int
    net_terms_id: Optional[int]
    pricing_tier_id: None
    delivery_date: None
    due_date: None
    manifest_number: None
    invoice_note: None
    shipping_method: Optional[str]
    ship_contact_facility_license: None
    transporter_license: None
    ship_name: Optional[str]
    ship_line_one: Optional[str]
    ship_line_two: None
    ship_city: Optional[str]
    ship_state: ShipState
    ship_zip: Optional[str]
    ship_country: ShipCountry
    ship_from_name: ShipFromName
    ship_from_line_one: ShipFromLineOne
    ship_from_line_two: ShipFromLineTwo
    ship_from_city: ShipFromCity
    ship_from_state: ShipState
    ship_from_zip: int
    ship_from_country: ShipCountry
    turnaround_time: None
    ship_tracking_number: None
    ship_carrier_name: None
    ship_driver_name: None
    ship_contact_phone: None
    ship_contact_email: None
    ship_receiving_details: None
    total_payments: str
    total_credits: str
    payment_status: PaymentStatus
    payments_currently_due: str
    total_write_offs: str
    backorder: bool
    backorder_status: None
    buyer_note: Optional[str]
    buyer_id: int
    buyer_contact_name: None
    buyer_contact_phone: None
    buyer_contact_email: Optional[str]
    buyer_state_license: Optional[str]
    created_at: datetime
    updated_at: datetime
    buyer: Buyer
    term: Optional[Term]
    order_status: OrderStatus
    sales_reps: List[SalesRep]

    def __init__(self, id: int, uuid: UUID, invoice_number: str, subtotal: str, total: str, excise_tax: str, excise_tax_percentage: None, additional_discount: str, delivery_cost: str, cultivation_tax: str, cultivation_tax_percentage: None, seller_archived: bool, order_date: datetime, created_by: CreatedBy, operation_id: int, order_status_id: int, cancelled: bool, deal_flow_id: int, net_terms_id: Optional[int], pricing_tier_id: None, delivery_date: None, due_date: None, manifest_number: None, invoice_note: None, shipping_method: Optional[str], ship_contact_facility_license: None, transporter_license: None, ship_name: Optional[str], ship_line_one: Optional[str], ship_line_two: None, ship_city: Optional[str], ship_state: ShipState, ship_zip: Optional[str], ship_country: ShipCountry, ship_from_name: ShipFromName, ship_from_line_one: ShipFromLineOne, ship_from_line_two: ShipFromLineTwo, ship_from_city: ShipFromCity, ship_from_state: ShipState, ship_from_zip: int, ship_from_country: ShipCountry, turnaround_time: None, ship_tracking_number: None, ship_carrier_name: None, ship_driver_name: None, ship_contact_phone: None, ship_contact_email: None, ship_receiving_details: None, total_payments: str, total_credits: str, payment_status: PaymentStatus, payments_currently_due: str, total_write_offs: str, backorder: bool, backorder_status: None, buyer_note: Optional[str], buyer_id: int, buyer_contact_name: None, buyer_contact_phone: None, buyer_contact_email: Optional[str], buyer_state_license: Optional[str], created_at: datetime, updated_at: datetime, buyer: Buyer, term: Optional[Term], order_status: OrderStatus, sales_reps: List[SalesRep]) -> None:
        self.id = id
        self.uuid = uuid
        self.invoice_number = invoice_number
        self.subtotal = subtotal
        self.total = total
        self.excise_tax = excise_tax
        self.excise_tax_percentage = excise_tax_percentage
        self.additional_discount = additional_discount
        self.delivery_cost = delivery_cost
        self.cultivation_tax = cultivation_tax
        self.cultivation_tax_percentage = cultivation_tax_percentage
        self.seller_archived = seller_archived
        self.order_date = order_date
        self.created_by = created_by
        self.operation_id = operation_id
        self.order_status_id = order_status_id
        self.cancelled = cancelled
        self.deal_flow_id = deal_flow_id
        self.net_terms_id = net_terms_id
        self.pricing_tier_id = pricing_tier_id
        self.delivery_date = delivery_date
        self.due_date = due_date
        self.manifest_number = manifest_number
        self.invoice_note = invoice_note
        self.shipping_method = shipping_method
        self.ship_contact_facility_license = ship_contact_facility_license
        self.transporter_license = transporter_license
        self.ship_name = ship_name
        self.ship_line_one = ship_line_one
        self.ship_line_two = ship_line_two
        self.ship_city = ship_city
        self.ship_state = ship_state
        self.ship_zip = ship_zip
        self.ship_country = ship_country
        self.ship_from_name = ship_from_name
        self.ship_from_line_one = ship_from_line_one
        self.ship_from_line_two = ship_from_line_two
        self.ship_from_city = ship_from_city
        self.ship_from_state = ship_from_state
        self.ship_from_zip = ship_from_zip
        self.ship_from_country = ship_from_country
        self.turnaround_time = turnaround_time
        self.ship_tracking_number = ship_tracking_number
        self.ship_carrier_name = ship_carrier_name
        self.ship_driver_name = ship_driver_name
        self.ship_contact_phone = ship_contact_phone
        self.ship_contact_email = ship_contact_email
        self.ship_receiving_details = ship_receiving_details
        self.total_payments = total_payments
        self.total_credits = total_credits
        self.payment_status = payment_status
        self.payments_currently_due = payments_currently_due
        self.total_write_offs = total_write_offs
        self.backorder = backorder
        self.backorder_status = backorder_status
        self.buyer_note = buyer_note
        self.buyer_id = buyer_id
        self.buyer_contact_name = buyer_contact_name
        self.buyer_contact_phone = buyer_contact_phone
        self.buyer_contact_email = buyer_contact_email
        self.buyer_state_license = buyer_state_license
        self.created_at = created_at
        self.updated_at = updated_at
        self.buyer = buyer
        self.term = term
        self.order_status = order_status
        self.sales_reps = sales_reps


class ShippingOrdersResponse(dict):
    orders: List[Order]
    links: Links
    meta: Meta

    def __init__(self, orders: List[Order], links: Links, meta: Meta) -> None:
        self.orders = orders
        self.links = links
        self.meta = meta
